# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: gradle build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: CMI-Importer
          # A file, directory or wildcard pattern that describes what to upload
          path: build/libs/CMI-Importer-*-all.jar


      - name: Get JAR info for release
        id: jar_info
        if: github.ref_type == 'tag'
        run: |
          JAR_FILE=$(find build/libs -name "CMI-Importer-*-all.jar" | head -1)
          JAR_NAME=$(basename "$JAR_FILE")
          FILE_SIZE=$(stat -c%s "$JAR_FILE" | numfmt --to=iec)
          echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "jar_name=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "file_size=$FILE_SIZE" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          name: "CMI-Importer ${{ github.ref_name }}"
          body: |
            ## CMI-Importer ${{ github.ref_name }}
            
            **Download:** [${{ steps.jar_info.outputs.jar_name }}](${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ steps.jar_info.outputs.jar_name }})
            
            **File Size:** ${{ steps.jar_info.outputs.file_size }}
            
            ---
            
            Built automatically from commit ${{ github.sha }}
          files: ${{ steps.jar_info.outputs.jar_file }}
          draft: true
          prerelease: false
          generate_release_notes: true
